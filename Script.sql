-- MySQL Script generated by MySQL Workbench
-- Thu Nov  1 11:00:44 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema SDEdb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema SDEdb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS SDEdb DEFAULT CHARACTER SET utf8 ;
USE SDEdb ;

-- -----------------------------------------------------
-- Table SDEdb.api
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS SDEdb.category (
  id INT(11) NOT NULL,
  category_name VARCHAR(255) NULL,
  PRIMARY KEY (id))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table SDEdb.Product_city_adresse
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS SDEdb.Product_city_adresse (
  id VARCHAR(255) NOT NULL,
  By VARCHAR(255) NULL,
  Postnumber INT NULL,
  adresse TEXT NULL,
  PRIMARY KEY (id))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table SDEdb.product_location
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS SDEdb.product_location (
  id INT NOT NULL AUTO_INCREMENT,
  virksomhed VARCHAR(255) NULL,
  Product_city_adresse_id VARCHAR(255) NOT NULL,
  lokale VARCHAR(255) NULL DEFAULT 'LX',
  hylde VARCHAR(255) NULL DEFAULT 'HX',
  plads VARCHAR(255) NULL DEFAULT 'PX',
  PRIMARY KEY (id, Product_city_adresse_id),
  INDEX fk_product_location_Product_city_adresse1_idx (Product_city_adresse_id ASC),
  CONSTRAINT fk_product_location_Product_city_adresse1
    FOREIGN KEY (Product_city_adresse_id)
    REFERENCES SDEdb.Product_city_adresse (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table SDEdb.leverandør
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS SDEdb.leverandør (
  id INT NOT NULL AUTO_INCREMENT,
  leverandør_name VARCHAR(255) NULL,
  leverandør_adress VARCHAR(255) NULL,
  leverandør_phonenr INT NULL,
  PRIMARY KEY (id))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table SDEdb.products
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS SDEdb.products (
  id INT NOT NULL AUTO_INCREMENT,
  product_name VARCHAR(45) NULL,
  product_location_id INT NOT NULL,
  flytbar TINYINT NULL,
  category_id INT(11) NOT NULL,
  leverandør_id INT NOT NULL,
  description VARCHAR(255) NULL DEFAULT 'No comment.',
  PRIMARY KEY (id),
  INDEX fk_products_category1_idx (category_id ASC),
  INDEX fk_products_product_location1_idx (product_location_id ASC),
  INDEX fk_products_leverandør1_idx (leverandør_id ASC),
  CONSTRAINT fk_products_category1
    FOREIGN KEY (category_id)
    REFERENCES SDEdb.category (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_products_product_location1
    FOREIGN KEY (product_location_id)
    REFERENCES SDEdb.product_location (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_products_leverandør1
    FOREIGN KEY (leverandør_id)
    REFERENCES SDEdb.leverandør (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table SDEdb.user_group
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS SDEdb.user_group (
  id INT NOT NULL AUTO_INCREMENT,
  usergroup_rank VARCHAR(45) NULL,
  PRIMARY KEY (id))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table SDEdb.users
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS SDEdb.users (
  id INT NOT NULL AUTO_INCREMENT,
  username_unilogin VARCHAR(45) NULL,
  password_unipw VARCHAR(45) NULL,
  email VARCHAR(255) NULL,
  user_group_id INT NOT NULL,
  PRIMARY KEY (id),
  INDEX fk_users_user_group_idx (user_group_id ASC),
  CONSTRAINT fk_users_user_group
    FOREIGN KEY (user_group_id)
    REFERENCES SDEdb.user_group (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table SDEdb.Product_rentals
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS SDEdb.Product_rentals (
  id INT NOT NULL AUTO_INCREMENT,
  users_id INT NOT NULL,
  products_id INT NOT NULL,
  reserved_date DATE NULL,
  start_date DATE NULL,
  slut_date DATE NULL,
  påmindelse_dato DATE NULL,
  return_date DATE NULL,
  PRIMARY KEY (id),
  INDEX fk_product_booking_users1_idx (users_id ASC),
  INDEX fk_product_booking_products1_idx (products_id ASC),
  CONSTRAINT fk_product_booking_users1
    FOREIGN KEY (users_id)
    REFERENCES SDEdb.users (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_product_booking_products1
    FOREIGN KEY (products_id)
    REFERENCES SDEdb.products (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table SDEdb.product_status
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS SDEdb.product_status (
  id INT NOT NULL AUTO_INCREMENT,
  status VARCHAR(50) NULL,
  PRIMARY KEY (id))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table SDEdb.Product_enhed
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS SDEdb.Product_enhed (
  id INT NOT NULL AUTO_INCREMENT,
  Enhed_number VARCHAR(10) NULL,
  product_status_id INT NOT NULL,
  products_id INT NOT NULL,
  PRIMARY KEY (id, product_status_id, products_id),
  INDEX fk_Product_enhed_product_status1_idx (product_status_id ASC),
  INDEX fk_Product_enhed_products1_idx (products_id ASC),
  CONSTRAINT fk_Product_enhed_product_status1
    FOREIGN KEY (product_status_id)
    REFERENCES SDEdb.product_status (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_Product_enhed_products1
    FOREIGN KEY (products_id)
    REFERENCES SDEdb.products (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table SDEdb.item_reserved
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS SDEdb.item_reserved (
  Product_rentals_id INT NOT NULL,
  PRIMARY KEY (Product_rentals_id),
  CONSTRAINT fk_Item_reserved_Product_rentals1
    FOREIGN KEY (Product_rentals_id)
    REFERENCES SDEdb.Product_rentals (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
